
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Calendar;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;



    public class frmAgregarem extends javax.swing.JFrame {
       conexion con = new conexion();
       Connection cone = (Connection) con.getConnection();
    private ResultSet rs;
    private PreparedStatement ps;
    /**
     * Creates new form frmMenuEmpleado
     */
    public frmAgregarem() {
        initComponents();
        // txtfecha.setText(fecha());
       // setIconImage(new ImageIcon(getClass().getResource("C:/Usuarios/HP/Escritorio/d.png")).getImage());
        PreparedStatement ps;
        ResultSet rs;
        ButtonGroup gSexo=new ButtonGroup();
        gSexo.add(rdbM);
        gSexo.add(rdbF);
        rdbM.setSelected(true);
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.yellow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtidem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtape = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rdbF = new javax.swing.JRadioButton();
        rdbM = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtsalario = new javax.swing.JTextPane();
        cmbcargo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtfecha = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Agregar Empleados");

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnCancelar.setText("Nuevo");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Identidad");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nombres:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Apellidos:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Sexo:");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rdbF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdbF.setText("Masculino");

        rdbM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdbM.setText("Femenino");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(rdbM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbF))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(rdbF)
                .addComponent(rdbM))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Fecha de nacimiento:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Salario:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Cargo:");

        jScrollPane1.setViewportView(txtsalario);

        cmbcargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Administrador", "Secretaria", "Conductor", "Ayudante" }));

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Identidad", "Nombres", "Apellidos", "Fecha de nacimiento", "Salario", "Cargo", "Sexo"
            }
        ));
        tablaEmpleados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tablaEmpleadosFocusLost(evt);
            }
        });
        tablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaEmpleados);

        jScrollPane3.setViewportView(txtfecha);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtnombre, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(txtape, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(cmbcargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3))
                                .addGap(266, 266, 266)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(txtidem, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(253, 253, 253))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnGuardar)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(btnBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtidem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(21, 21, 21)
                                .addComponent(jLabel6))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cmbcargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        agregarEmpleado();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        modificarEmpleados();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
      inicializarDatos(); 
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
      buscarEmpleado();  
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEmpleadosMouseClicked
       selecDatos();
    }//GEN-LAST:event_tablaEmpleadosMouseClicked

    private void tablaEmpleadosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaEmpleadosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaEmpleadosFocusLost
        
    private String fecha(){
        int dia,mes,año;
        dia= Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        mes=Calendar.getInstance().get(Calendar.MONTH)+ 1;
        año= Calendar.getInstance().get(Calendar.YEAR);
        
        return año + "-" + mes + "-" +dia;
    }

       public void inicializarDatos(){
        txtidem.setText("");
        txtnombre.setText("");
        txtape.setText("");
        txtsalario.setText("");
        rdbM.setSelected(true);
        }
       
       //Agraga al empleado con todos sus datos
          public void agregarEmpleado(){
            int sexo;
            if(rdbM.isSelected()==true)
                sexo=1;
            else
                sexo=2;
             if(cmbcargo.equals("Seleccionar")){
               String exp = txtidem.getText();
                if(exp.isEmpty()){
                JOptionPane.showMessageDialog(null, "No puede guardar un registro vacío", "INSERTE DATO",JOptionPane.ERROR_MESSAGE);
                }
                JOptionPane.showMessageDialog(null, "Seleccione el cargo que desea guardar", "SELECCIONE", JOptionPane.INFORMATION_MESSAGE);
            }
         int car= cmbcargo.getSelectedIndex();
            
        try {
            PreparedStatement pps=cone.prepareStatement("INSERT INTO empleados(id_empleado,Nombre_empleado,apellido,fecha_de_nacimiento,salario,id_cargo,id_sexo) VALUES(?,?,?,?,?,?,?)");
            pps.setString(1, txtidem.getText());
            pps.setString(2, txtnombre.getText());
            pps.setString(3, txtape.getText());
            pps.setString(4, txtfecha.getText());
            pps.setString(5, txtsalario.getText());
            pps.setString(6, String.valueOf(cmbcargo.getSelectedIndex()));
            pps.setString(7, String.valueOf(sexo));
            pps.executeUpdate();
            cargarTabla();
            switch(car){
                 case 0: JOptionPane.showMessageDialog(null, "Seleccione un cargo", "SELECCIONE", JOptionPane.INFORMATION_MESSAGE);  
                 case 1:{
                     int carg= cmbcargo.getSelectedIndex();
                     switch(carg){
                           case 0: ;
                                break;
                    
                            case 1: carg=1;
                                break;
                    
                            case 2: carg=2;
                                break;
                    
                            case 3: carg=3;
                                break;
                                case 4: carg=4;
                                break;
                            case 5: carg=5;
                                break;
                        
                    }
                   
               }
                
            }
            JOptionPane.showMessageDialog(null, "Se ha registrado los datos del empleado", "Datos guardados", JOptionPane.PLAIN_MESSAGE);
            inicializarDatos();
        } catch (SQLException ex) {
            Logger.getLogger(frmAgregarem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
          
          //Metodo de buscar al empleado
     public void buscarEmpleado(){
          int tipoD= cmbcargo.getSelectedIndex();
        
        try {
            ps = cone.prepareStatement("SELECT * FROM empleados WHERE id_empleado=?");
            ps.setString(1, txtidem.getText());
            
            rs= ps.executeQuery();
            
            if(rs.next()){
                txtnombre.setText(rs.getString("Nombre_empleado"));
                txtape.setText(rs.getString("apellido"));
                txtfecha.setText(rs.getString("fecha_de_nacimiento"));
                 txtsalario.setText(rs.getString("salario"));
               // cmbcargo.setText(rs.getString("apellido"));
               // txtfecha.setCalendar(rs.getTimestamp(String,"fecha_de_nacimiento"));
                if("1".equals(rs.getString("id_sexo"))){
                    rdbM.setSelected(true);
                    
                    
                }else{
                    rdbF.setSelected(true);
                }
              cargarTabla();
            }else{
               JOptionPane.showMessageDialog(null, "No existe ningun empleado con ese numero de identidad: " + txtidem.getText(), "No existe el empleado", JOptionPane.INFORMATION_MESSAGE);
               txtidem.requestFocus();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmAgregarem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     public void modificarEmpleados(){
       
        try {
            int confirmar= JOptionPane.showConfirmDialog(null, "¿Está seguro de modificar este empleado?");
             if(JOptionPane.OK_OPTION==confirmar){
            ps= cone.prepareStatement("UPDATE empleados SET id_cargo=?, salario=? WHERE id_empleado=?");
            ps.setString(1, txtsalario.getText());
            ps.setString(2, String.valueOf(cmbcargo.getSelectedIndex()));
            ps.setString(3, txtidem.getText());
            int res= ps.executeUpdate(); 
            if(res>0){
                
              JOptionPane.showMessageDialog(null, "Datos modificados con éxito", "Datos Modificados", JOptionPane.PLAIN_MESSAGE);
               inicializarDatos();
                
            }
            else{
            JOptionPane.showMessageDialog(null, "No se pudo modificar los datos", "Error al modificar", JOptionPane.INFORMATION_MESSAGE); 
             }
           }
         }catch (SQLException ex) {
          Logger.getLogger(frmAgregarem.class.getName()).log(Level.SEVERE, null, ex);
             
         }
       }  
           
        
    
      public void eliminarEmpleado(){
        
        try {
            int confirmar= JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar este empleado?");
            if(JOptionPane.OK_OPTION==confirmar){
              ps= cone.prepareStatement("DELETE FROM empleados WHERE id_empleado=?");
              ps.setString(1, txtidem.getText());
              int res= ps.executeUpdate();
              
                if(res>0){
                  JOptionPane.showMessageDialog(null, "El empleado ha sido eliminado", "empleado eliminado", JOptionPane.PLAIN_MESSAGE);
                  inicializarDatos();
                }
                else{
                  JOptionPane.showMessageDialog(null, "Error al eliminar el empleado", "Aviso", JOptionPane.INFORMATION_MESSAGE); 
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(frmAgregarem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
      public void cargarTabla(){
        
        DefaultTableModel modelo = new DefaultTableModel();
        tablaEmpleados.setModel(modelo);
        
        String where="";
        
        if(!"".equals(txtidem.getText())){
            where= "WHERE id_empleado= '" + txtidem.getText() + "'";
        }
        
        
        try {
            String sql=" SELECT * FROM empleados " + where;
            ps=cone.prepareStatement(sql);
            rs= ps.executeQuery();
            
            ResultSetMetaData rsMd= rs.getMetaData();
            int cant= rsMd.getColumnCount();
            
            modelo.addColumn("id_empleado");
            modelo.addColumn("Nombre_empleado");
            modelo.addColumn("Apellidos");
            modelo.addColumn("Salario");
            modelo.addColumn("fecha_de_nacimiento");
            modelo.addColumn("Cargo");
            modelo.addColumn("Sexo");
            
            while(rs.next()){
                Object[]filas=new Object[cant];
                
                for(int i=0;i<cant;i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmAgregarem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        public void selecDatos(){
        int fila = tablaEmpleados.getSelectedRow();
        String id= tablaEmpleados.getValueAt(fila, 0).toString();
        
        try {
            PreparedStatement ps= cone.prepareStatement("SELECT * FROM empleados WHERE id_empleados=?");
            ps.setString(1, id);
            
            ResultSet rs= ps.executeQuery();
            
            while(rs.next()){
                txtidem.setText(rs.getString("Identidad"));
                txtnombre.setText(rs.getString("Nombres"));
                txtape.setText(rs.getString("apellidos"));
              // txtfecha.setText(rs.getString.valueOf("fecha_de_nacimienti"));
                 txtsalario.setText(rs.getString("apellidos"));
                //  cmbcargo.setText(rs.getString("apellidos"));
                if("1".equals(rs.getString("sexo"))){
                    rdbM.setSelected(true);
                }else{
                    rdbF.setSelected(true);
                }        
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmAgregarem.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
    
   /*   public void agregarempleado(){
   // Connection con = null;
   if(cmbcargo.equals("Seleccionar")){
               String exp = txtidem.getText();
                if(exp.isEmpty()){
                JOptionPane.showMessageDialog(null, "No puede guardar un registro vacío", "INSERTE DATO",JOptionPane.ERROR_MESSAGE);
                }
                JOptionPane.showMessageDialog(null, "Seleccione el cargo que desea guardar", "SELECCIONE", JOptionPane.INFORMATION_MESSAGE);
            }
         int car= cmbcargo.getSelectedIndex();
    try{
        PreparedStatement ps = cone.prepareStatement("INSERT INTO `empleados` (`apellido`, `id_cargo`, `edad`, `id_empleado`, `Nombre_empleado`, `salario`, `id_sexo`) VALUES (?,?,?,?,?,?,? )");
        ps.setString(1,   txtapellidose.getText());
        ps.setString(2, String.valueOf(cmbcargo.getSelectedIndex()));
        ps.setString(3, txtfecha.getText());
        ps.setString(4, txtidem.getText());
        ps.setString(5,  txtnombreem.getText());
        ps.setString(6, String.valueOf( txtsalrio.getText()));
        ps.setString(7, txtsexo.getText());
        
        
        ps.executeUpdate();
          switch(car){
              case 0: JOptionPane.showMessageDialog(null, "Seleccione un cargo", "SELECCIONE", JOptionPane.INFORMATION_MESSAGE);  
               case 1:{
                   int carg= cmbcargo.getSelectedIndex();
                    switch(carg){
                            case 0: ;
                                break;
                    
                            case 1: carg=1;
                                break;
                    
                            case 2: carg=2;
                                break;
                    
                            case 3: carg=3;
                                break;
                                case 4: carg=4;
                                break;
                            case 5: carg=5;
                                break;
                         }
               }
          }
       
         JOptionPane.showMessageDialog(null, "Los datos han sido guardados", "Datos guardados", JOptionPane.PLAIN_MESSAGE);
    }catch(SQLException ex){
            Logger.getLogger(frmAgregarem.class.getName()).log(Level.SEVERE, null,ex);
    }
    }
      */
     /* void mostrardatos(String valor){
          
         
         DefaultTableModel modelo = new DefaultTableModel();
         modelo.addColumn("apellido");
         modelo.addColumn("cargo");
         modelo.addColumn("edad");
         modelo.addColumn("Numero de Identidad");
         modelo.addColumn("Nombre");
         modelo.addColumn("Salario");
         modelo.addColumn("Id Sexo");
         
         
         tablae.setModel(modelo);
         String sql = "";
         if(valor.equals("")){
             sql = "SELECT * FROM empleados";
         }else{
             sql = "SELECT apellido,id_cargo,edad,id_empleado,Nombre_empleado,salario,id_sexo FROM empleados WHERE (apellido='"+valor+"'id_cargo='"+valor+"'edad='"+valor+"'id_empleado='"+valor+"'Nombre_empleado='"+valor+"'salario='"+valor+"'id_sexo='"+valor+"')";
         }
         
         String[] datos = new String[7];
         
         try{
             Statement st = cone.createStatement();
             ResultSet rs = st.executeQuery(sql);
             
             while(rs.next()){
                 datos[0] = rs.getString(1);
                 datos[1] = rs.getString(2);
                 datos[2] = rs.getString(3);
                 datos[3] = rs.getString(4);
                 datos[4] = rs.getString(5);
                 datos[5] = rs.getString(6);
                 datos[6] = rs.getString(7);
                 
             }
             
             tablae.setModel(modelo);
         }catch(Exception e){
             
         }   
     }*/
     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAgregarem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAgregarem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAgregarem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAgregarem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAgregarem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbcargo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton rdbF;
    private javax.swing.JRadioButton rdbM;
    private javax.swing.JTable tablaEmpleados;
    private javax.swing.JTextField txtape;
    private javax.swing.JTextPane txtfecha;
    private javax.swing.JTextField txtidem;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextPane txtsalario;
    // End of variables declaration//GEN-END:variables

    private static class conexión {

        public conexión() {
        }
    }
}
